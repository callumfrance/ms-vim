"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" _vimrc
" Callum France
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

set nocompatible
source $VIMRUNTIME/defaults.vim
source $VIMRUNTIME/mswin.vim
behave mswin

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugins
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
filetype off
set rtp+='$Vim/vimfiles/bundle/Vundle.vim'
call vundle#begin('$Vim/vimfiles/bundle/')

"Let vundle manage vundle
Plugin 'VundleVim/Vundle.vim'
" vundle plugins go here
Plugin 'mattn/emmet-vim'				" HTML settings
Plugin 'vim-airline/vim-airline'		" Status line
Plugin 'vim-airline/vim-airline-themes' " Status line themes
Plugin 'flazz/vim-colorschemes'			" Colorschemes!!!
Plugin 'vim-scripts/ScrollColors'		" Colour wheel
Plugin 'ap/vim-css-color'				" css hex colour highlighting
Plugin 'junegunn/goyo.vim'				" Comfortable page spacing
Plugin 'ajh17/VimCompletesMe'			" Code completion

call vundle#end()
filetype plugin indent on

" Plugin 'Ron89/thesaurus_query.vim'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Styling
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
colorscheme solarized
syntax enable
set number
set antialias				" smoother fonts
set title					" gives window the title of file
set wildmenu				" tab completion in NORM gives menu
set synmaxcol=100			" max column syntax highlighing for
set encoding=utf-8

set noerrorbells
set novisualbell
set belloff=all				" disable all bells
set t_vb=

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Formatting
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
winpos 9999 2
set lines=50 columns=80
set tw=200					" Standard coding column size
" if wrapping enabled, wrap whole at the end of a word
set linebreak
" by default wrapping is disabled
set nowrap
set tabstop=4				" use 4 spaces for tabs
set softtabstop=4
set shiftwidth=4
set noexpandtab				" don't replace a tab with spaces
set smarttab
set shiftround				" indents rounded to a multiple

set laststatus=2			" always displays the status line
" Format the status line
set statusline=\ %{HasPaste()}%F%m%r%h\ %w\ \ CWD:\ %r%{getcwd()}%h\ \ \ Line:\ %l\ \ Column:\ %c

" display indentation guides
set list listchars=tab:\|\ ,trail:Â·

" disable scrollbars
set guioptions-=r
set guioptions-=l
" disable menus
set guioptions-=T
set guioptions-=m

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Searching
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set hlsearch
set incsearch				" don't constantly update search
set ignorecase
set smartcase
set showmatch				" briefly jump to matching bracket

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => History
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set history=200
set undolevels=200
set nowritebackup
set noswapfile
set nobackup

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nnoremap ; :
nnoremap <space> :w<CR>:nohl<CR>
command WQ wq
command Wq wq
command W w
command Q q
" maps normal-mode <tab> key to switching windows
nnoremap <tab> <C-W>w
" normal-mode backspace to switch into other direction
nnoremap <bs> <C-W>W

map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/
	" expands on tab edit
" maps the F3 key to file viewer
nnoremap <F3> :Explore<CR> 

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Folds
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set foldmethod=marker
set foldmarker={,}
" opens all folds automatically on file start
set nofoldenable
set foldtext=v:folddashes.substitute(getline(v:foldstart),'/\\*\\\|\\*/\\\|{{{\\d\\=','','g')

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => White Space Deletion
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Delete trailing white space on save, useful for some filetypes ;)
fun! CleanExtraSpaces()
    let save_cursor = getpos(".")
    let old_query = getreg('/')
    silent! %s/\s\+$//e
    call setpos('.', save_cursor)
    call setreg('/', old_query)
endfun

if has("autocmd")
    autocmd BufWritePre *.txt,*.js,*.py,*.wiki,*.sh,*.coffee :call CleanExtraSpaces()
    autocmd BufWritePre *.txt,*.md,*.tex :call LazyWP()
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Reloading _vimrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
map <leader>e :e! ~/.vim_runtime/my_configs.vim<cr>
autocmd! bufwritepost ~/.vim_runtime/my_configs.vim source ~/.vim_runtime/my_configs.vim

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Omni complete
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
autocmd FileType css set omnifunc=csscomplete#CompleteCSS

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Airline Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#branch#format = 1      " only shows file name
let g:airline_theme='distinguished'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Word Processor
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" `:call WP()`      opens the word processor mode
" `z=`              displays corrections
" `zg`              adds words to dictionary
function! WP()
    setlocal noexpandtab        "When the tab key is pressed, inserts a tab and not several spaces
    setlocal formatoptions=an1
		"a = automatic formatting of paragraphs
		"n = recognises lists
		"1 = don't break line after a one-letter word
    map j gj
    map k gk

	if has("gui_macvim")		" only works in unix systems
		setlocal formatprg=par
	endif

    setlocal wrap
    setlocal linebreak
    setlocal spellfile="C:\Program Files (x86)\Vim\vimfiles\spell\en.utf-8.add"
    setlocal spell spelllang=en_au      " http://vimdoc.sourceforge.net/htmldoc/spell.html
	setlocal syntax=off
	retab

    Goyo 95%x95%-2%             " margins
  
    colorscheme pencil
    setlocal lines=65 columns=90
	setlocal tw=90
endfunction

function! LazyWP()
    setlocal noexpandtab
    setlocal formatoptions=1
    map j gj
    map k gk
    setlocal formatprg=par
    setlocal wrap
    setlocal linebreak			" line wraps don't break up words

	colorscheme materialtheme
    setlocal lines=65 columns=90
endfunction
